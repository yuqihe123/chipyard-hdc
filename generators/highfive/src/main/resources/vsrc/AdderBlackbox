module adder  
( input         clock,
  input         reset,
  output        io_cmd_ready,
  input         io_cmd_valid,
  input  [6:0]  io_cmd_bits_inst_funct,
  input  [4:0]  io_cmd_bits_inst_rs2,
  input  [4:0]  io_cmd_bits_inst_rs1,
  input         io_cmd_bits_inst_xd,
  input         io_cmd_bits_inst_xs1,
  input         io_cmd_bits_inst_xs2,
  input  [4:0]  io_cmd_bits_inst_rd,
  input  [6:0]  io_cmd_bits_inst_opcode,
  input  [63:0] io_cmd_bits_rs1,
  input  [63:0] io_cmd_bits_rs2,
  output  io_resp_valid,
  output [4:0]  io_resp_bits_rd,
  output [63:0] io_resp_bits_data,);


assign io_resp_bits_data=io_cmd_bits_rs1+io_cmd_bits_rs2;
assign io_resp_valid=1'b1
assign io_resp_bits_rd=5'b00000;
assign io_cmd_ready=1'b1;

endmodule
